<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xhtml="http://www.w3.org/1999/xhtml">Official Google Maps API Blog - powered by FeedBurner</title>
<link href="http://www.feedburner.com/fb/lib/stylesheets/undohtml.css" rel="stylesheet" type="text/css" media="all">
<link href="http://www.feedburner.com/fb/feed-styles/bf30.css" rel="stylesheet" type="text/css" media="all">
<link rel="alternate" type="application/atom+xml" title="Official Google Maps API Blog" href="http://feeds.feedburner.com/OfficialGoogleMapsApiBlog">
<script type="text/javascript" src="http://www.feedburner.com/fb/feed-styles/bf30.js"></script>
</head>
<body id="browserfriendly" onload="jsFeedUrl='http://feeds.feedburner.com/OfficialGoogleMapsApiBlog';loadSubscribeAreaUltra('standard');go_decoding()">
<div id="cometestme" style="display:none;">&amp;</div>
<div id="bodycontainer">
<div id="bannerblock">
<h1>
<a href="http://googlemapsapi.blogspot.com/">Official Google Maps API Blog</a>
</h1>
<h2>syndicated content powered by FeedBurner</h2>
<p style="clear:both"></p>
</div>
<div id="bodyblock">
<div id="subscribenow" class="subscribeblock action">
<div id="subscribe-userchoice" style="display:none">
<p id="subscribeLink">
<a href="#">...</a>
</p>
<p id="resetLink">Reset this favorite; <a href="#" onclick="return clearUserchoice('standard')">show all Subscribe options</a>
</p>
</div>
<div id="subscribe-options">
<h3>Subscribe Now!</h3>
<h4>...with web-based news readers. Click your choice below:</h4>
<div id="webbased">
<a href="http://add.my.yahoo.com/rss?url=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href = subscribeNow(this.href,'My Yahoo!');return true"><img src="http://us.i1.yimg.com/us.yimg.com/i/us/my/addtomyyahoo4.gif" width="91" height="17" alt="addtomyyahoo4"></a><a class="img" href="http://www.newsgator.com/ngs/subscriber/subext.aspx?url=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="subscribeNow(this.href,'NewsGator Online');return true"><img src="http://www.newsgator.com/images/ngsub1.gif" alt="Subscribe in NewsGator Online"></a><a href="http://feeds.my.aol.com/add.jsp?url=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'My AOL');return true"><img src="http://o.aolcdn.com/myfeeds/html/vis/myaol_cta1.gif" alt="Add to My AOL" border="0"></a>
<br>
<a class="img" href="http://www.rojo.com/add-subscription?resource=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'Rojo');return true"><img src="http://www.rojo.com/corporate/images/add-to-rojo.gif" alt="Subscribe in Rojo"></a><a class="img" href="http://www.bloglines.com/sub/http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'Bloglines');return true"><img src="http://www.bloglines.com/images/sub_modern5.gif" alt="Subscribe with Bloglines"></a><a href="http://www.netvibes.com/subscribe.php?url=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'Netvibes');return true"><img src="http://www.netvibes.com/img/add2netvibes.gif" alt="Add to netvibes"></a>
<br>
<a href="http://fusion.google.com/add?feedurl=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'Google');return true"><img src="http://buttons.googlesyndication.com/fusion/add.gif" width="104" height="17" alt="Add to Google"></a><a href="http://www.pageflakes.com/subscribe.aspx?url=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog" onclick="this.href=subscribeNow(this.href,'Pageflakes');return true"><img src="http://www.pageflakes.com/subscribe2.gif" border="0"></a>
</div>
<h4>...with other readers:</h4>
<form action="http://www.feedburner.com" method="get">
<select onchange="location.href=subscribeNowUltra('feed:http://feeds.feedburner.com/OfficialGoogleMapsApiBlog',this.options[this.selectedIndex].value)"><option value="--" disabled selected style="padding-left:0">(Choose Your Reader)</option><option value="FeedDemon">FeedDemon</option><option value="NetNewsWire">NetNewsWire</option><option value="NewsFire">NewsFire</option><option value="NewsGator Outlook Edition">NewsGator Outlook Edition</option><option value="RSSOwl">RSSOwl</option><option value="shrook">Shrook</option><option value="USM">Universal Subscription Mechanism (USM)</option></select>
</form>
<p>
<a href="http://feeds.feedburner.com/OfficialGoogleMapsApiBlog?format=xml"><img src="http://www.feedburner.com/fb/lib/images/icons/feed-icon-12x12-orange.gif" alt="original feed"></a> <a href="http://feeds.feedburner.com/OfficialGoogleMapsApiBlog?format=xml">View Feed XML</a>
</p>
<div id="embed">
<h3>Embed this content on your site</h3>
<p id="embedthis">Embed with: <a href="http://www.springwidgets.com/widgetize/23/?param=http://feeds.feedburner.com/OfficialGoogleMapsApiBlog">SpringWidgets</a>
</p>
</div>
</div>
<input id="savechoice" type="hidden" value="standard">
</div>
<p class="about">FeedBurner makes it easy to receive content updates in My Yahoo!, Newsgator, Bloglines, and other news readers.</p>
<p class="about">
<a href="http://www.feedburner.com/fb/a/aboutrss">Learn more about syndication and FeedBurner...</a>
</p>
<h3 id="currentFeedContent">Current Feed Content</h3>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/194652428/new-article-creating-user-contributed.html">New Article: Creating a User-Contributed Map App</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-12-03 16:02:03 UTC-08:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
In this crazy Web 2.0 world, it's all about one thing: the user. It's about what the user wants from your site, and what the user can contribute to your site. That's particularly true about map sites - the world is a big complicated place full of users who are experts on the 10 mile radius around them. That's part of the reason why <a href="http://maps.google.com">maps.google.com</a> added user-created maps, geocode editing, and local business reviews this year. Now, the question pulsing through your mind is probably: "How can I get in on some of this user-contributed action??" Good news, we have an answer! 
</p>
<p>
Our latest article, <a href="http://code.google.com/support/bin/answer.py?answer=81026&topic=11364&fromblog=true">"Creating a User-Contributed Map with PHP and Google Spreadsheets"</a> describes what's necessary to set up a shared Community Map application. The article takes you through the steps of registering a user, logging in a user, letting users add map places, and creating the map. The article uses Google Spreadsheets for a pseudo-database and the PHP client library to perform HTTP operations, giving you the advantage of a nice frontend for database editing/viewing (<a href="http://spreadsheets.google.com">spreadsheets.google.com</a>) and a database that's not dependent on a particular hosting provider. However, those of you who are more comfortable with PHP/MySQL should be able to read through the article and apply the same principles to a MySQL database instead. As always, please post in the <a href="http://groups.google.com/group/Google-Maps-API">forum</a> with questions.
</p>
<a href="http://code.google.com/support/bin/answer.py?answer=81026&topic=11364&fromblog=true">
<img src="http://www.google.com/help/hc/images/communitymap_addlocation.jpg" style="border:1px solid blue;"/>
</a><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/194652428" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/192002035/is-google-maps-in-your-neck-of-woods.html">Is Google Maps in your neck of the woods? A new, interactive way to find out!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-11-29 10:31:35 UTC-08:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
The good news: here at Google, we're constantly increasing map coverage internationally: pushing out new tile updates, adding geocoding/routing data, collecting local business results, etc. The bad news: it's not easy keeping up with the coverage and remembering where we have what. I can barely keep track, and it's my job. :)
</p>
<p>
So, we've collaborated on a spreadsheet that details our coverage for every country where we have anything, and hooked it up to a nifty auto-filter mechanism so that you can quickly answer questions like:
</p>
<ul>
<li>Which countries have map tiles and local business results?</li>
<li>Which countries have localized map controls?</li>
<li>Which countries have driving directions and geocoding? (shown below)</li>
</ul>
<a href="http://gmaps-samples.googlecode.com/svn/trunk/mapcoverage_filtered.html"><img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;" src="http://bp3.blogger.com/_T1lquhCmKo8/R0yY-OZpNLI/AAAAAAAAAGM/sNgwMjb3PKM/s400/mapcoverage_screenshot.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5137649469707859122" /></a>
<p>The FAQ item pointing to the spreadsheet is <a href="http://code.google.com/support/bin/answer.py?answer=81748&topic=10946">here</a>, the auto-filterable spreadsheet is <a href="http://gmaps-samples.googlecode.com/svn/trunk/mapcoverage_filtered.html">here</a>, and for good measure, the published spreadsheet is <a href="http://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ">here</a>. Please post in the <a href="http://groups.google.com/group/Google-Maps-API">forum</a> if you have any questions or suggestions for improving the spreadsheet. Now, go forth and make internationally relevant mashups!
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/192002035" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/184889427/pump-up-your-info-windows-to-max.html">Pump up your info windows to the max!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-11-14 13:54:26 UTC-08:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
Are your map's info windows bursting with information, barely able to contain it all? Well, let them burst &mdash; into maximized info windows. In v2.93, the team has added various options, functions, and events to expand <code><a href="http://code.google.com/apis/maps/documentation/reference.html#GInfoWindow">GInfoWindow</a></code>, letting you mimic the behavior of the Google Maps <a href="http://maps.google.com/maps?f=q&hl=en&geocode=&time=&date=&ttype=&q=sandwich+island+near+90007&ie=UTF8&ll=34.386513,-118.222504&spn=0.886239,1.881409&z=10&iwloc=A&iwd=1&cid=34024951,-118283877,11214667035504160060&dtab=2&om=1
"> local search result info windows</a>, which expand to include a wealth of information about particular businesses. By specifying <code>maxContent</code> and <code>maxTitle</code> in <code><a href="http://code.google.com/apis/maps/documentation/reference.html#GInfoWindowOptions">GInfoWindowOptions</a></code>, your info window will automatically be given a maximize button and a (really addictive to watch) maximization animation. The <a href="http://gmaps-samples.googlecode.com/svn/trunk/megawindow/maxcontent_simple.html">example inlined below</a> shows you how you can use this on map click or marker click, and how you can pass in Strings or DOM nodes to the options:
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/megawindow/maxcontent_simple.html" width="550" height="350" frameborder="0">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/megawindow/maxcontent_simple.html">(Link to simple example of Maximized InfoWindows)</a>
</iframe>

<p>
If you're a power developer, you may be interested in dynamically loading the contents of the maximized info window once clicked (so that you only have to download information in which your users are interested). By listening to the <code>'maximizeclick'</code> event, we can replace the innerHTML of the <code>maxContent</code> DOM node once <code>GDownloadUrl</code> returns with our data. The <a href="http://gmaps-samples.googlecode.com/svn/trunk/megawindow/maxcontent_ajax.html">example here</a> shows loading the contents of another file (in this case, one of our old blog posts) into the maximized info window.
</p>

<p>
Start playing around with these examples and let us know if you encounter problems in the <a href="http://groups.google.com/group/Google-Maps-API/">Maps API forum</a>. Try not to get too addicted to the maximize animation. ;)
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/184889427" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/181355278/calling-all-phpmysql-developers-come.html">Calling all PHP/MySQL Developers: Come get your sample code!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-11-07 16:00:21 UTC-08:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
Recently, we surveyed developers to find out who had read and benefited from one of our popular PHP/MySQL articles: <a href="http://code.google.com/support/bin/answer.py?answer=65622&topic=11364&fromblog">"Using PHP/MySQL with Google Maps"</a> and <a href="http://code.google.com/support/bin/answer.py?answer=69906&topic=11364&fromblog">"Using PHP and MySQL to create KML."</a> We got quite a few responses. Here are just two of the nifty sites they told us about: 
<ul>
<li><a href="http://www.suburbview.com/">SuburbView</a>: This Australian real estate listings site includes a map with checkboxes to let you filter results, and a KML with prominent labels to indicate the all-important price of the listing.</li>
<li><a href="http://www.cretanadvice.co.uk/property/cpmap.html">Crete Property Map</a>: This is another real estate listings site that also uses checkboxes for filtering, plus our open-source <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/release/">DragZoomControl</a> and nicely styled sidebar items and info windows. The developer then includes the KML output in his <a href="http://www.cretanadvice.co.uk/sitemap.xml">sitemap</a> to make sure his real estate listings are indexed by Google and searchable by users on Google Maps.
</li>
</ul>

<p>
Since it's become obvious to us that there's a huge and eager PHP/MySQL developer community out there, we're releasing two new articles for you:</p>
<ul>
<img align="right" style="margin: 5px; border: 1px solid black;" src="http://bp0.blogger.com/_T1lquhCmKo8/Ry_CoUSKDbI/AAAAAAAAAFI/CiteGFsmDd4/s400/screenshot_phpsqlinfomap_article.jpg"/>
<li><a href="http://code.google.com/support/bin/answer.py?answer=80200&topic=11364&fromblog">"Geocoding with PHP/MySQL"</a> gets you started on geocoding addresses within your database (and has some tips for working with the new IP-based limiting system!).</li>
<li><a href="http://code.google.com/support/bin/answer.py?answer=80201&topic=11364&fromblog">"From InfoWindows to a Database: Saving User-Added Form Data"</a> shows you how to enable users to add geo-tagged information to your database via your map application.
</li>
</ul>
<p>All of our PHP/MySQL articles use the same table and data, so it should be easy for you to setup a similar table once and use the techniques described throughout all the articles. In addition, all articles been updated with both PHP 4 and PHP 5 code. (Challenge: How many articles can you do in one sitting, coffee breaks allowed?) 
</p>

<br clear="all"/>

<p>
As always, please post in <a href="http://groups.google.com/group/Google-Maps-API/topics">the forum</a> with questions, suggestions on future articles or enhancements, or if you just want to show what you've created.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/181355278" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/180702022/introducing-googlebar.html">Introducing... the GoogleBar!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-11-06 11:32:04 UTC-08:00</h5>
<div class="itemcontent" name="decodeable"><font class="byline-author">Posted by Mike Perrow, Maps API Team</font>

<p>
Over the past few months, the AJAX Search API team has launched and improved their <a href="http://www.google.com/uds/solutions/localsearch/index.html">LocalSearch control</a> for the Maps API. The LocalSearch control makes it easy for developers to add local business search functionality to their mashups.
</p>
<p>
Here on the Maps API team, we liked the LocalSearch control so much that we wanted to make it really easy for developers to add it to their maps. Today, we've released a new feature for the Maps API, which we've called the GoogleBar.
</p>
<p>
Developers who enable the GoogleBar will see the "Powered By Google" Logo on their map replaced with a shiny new control, which pops up a search box for the user so they can search the map for local listings. Take a look at the example below. You're looking at my old haunt in the old town of Edinburgh, Scotland. Try searching for a pub!
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/googlebar/googlebar_simple.html" frameborder="0" height="450" width="550">
</iframe>
<p>
To enable the GoogleBar, simply call the <code>enableGooglebar()</code> method on the map object within your mashup:
</p>
<pre class="code">
var map = new GMap2(document.getElementById("map"));
...
map.enableGoogleBar();
</pre>

<p>As always, please post questions or comments in the <a href="http://groups.google.com/group/Google-Maps-API/">Maps API forum</a>.</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/180702022" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/178036720/map-of-dead-screen-overlayed-shoot-em_31.html">Map of the Dead: A Screen Overlay'ed Shoot 'Em Up!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-31 20:25:39 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
It's that time of year again: the leaves turn orange and fall off the trees, and I can no longer turn on the TV without fear of stumbling upon a trailer for some ridiculously gory horror movie sequel. The TV used to be a safe, happy place filled with frolicking Care Bears. Someone out there clearly decided that my couch-filled evenings weren't filled with enough near heart attacks, and that all sorts of demons should thus invade my commercial breaks.
</p>

<p>
Well, two can play this game. Remember the nice, safe, happy Google Map? Not anymore! Welcome to <a href="http://gmaps-samples.googlecode.com/svn/trunk/mapofthedead/mapofthedead_game.html">Map of the Dead</a>: a game where zombies spawn on the map and just keep walking in that creepy zombie way until you give them a clear shot in the brain. Aim through the reticule, press spacebar to shoot and arrows to move around. Click the screenshot below to try it out.
</p>

<a href="http://gmaps-samples.googlecode.com/svn/trunk/mapofthedead/mapofthedead_game.html">
<img style="border:1px solid blue" src="http://bp2.blogger.com/_T1lquhCmKo8/Ryji8kSKDZI/AAAAAAAAADc/FYa4-ZLonJM/s400/zombie_screenshot.jpg"/>
</a>
<br/>

<p>Of course, this game takes advantage of some neat Maps API features: the just released <code>GScreenOverlay*</code> that can be used like KML's <a href="http://code.google.com/apis/kml/documentation/kml_tags_21.html#screenoverlay">ScreenOverlay</a> to place images on the map (used here for the reticule and logo), and the <code>GKeyboardHandler</code> class to let users use the default Google Maps keyboard shortcuts to navigate the map (used here for the panning movement).
</p>

<p>*Documentation for <code>GScreenOverlay</code> is forthcoming. Check back in a few days, or check my code to see how I used it!</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/178036720" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/176905472/kml-articles-abound-its-about-time.html">KML Articles Abound: It's About Time</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-29 18:33:16 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Mano Marks, Geo APIs Team</span>

<br/>

<p>
We've added two great new KML articles to <a href="http://code.google.com/">code.google.com</a>.
</p>

<br/>

<img style="margin: 0pt 10px 10px 0pt; float: right; cursor: pointer;" src="http://bp0.blogger.com/_Xr9hdoIAWw4/RyZzn5QZ48I/AAAAAAAAADI/eSI--W950aA/s320/statehood_thumb.gif" alt="" id="BLOGGER_PHOTO_ID_5126912355029607362" border="0" />  <p style="text-align: left;">First, we've added a new article on "Time and Animation" to our "Topics in KML" series. The ability to associate geospatial elements with temporal data was added about a year ago to Google Earth 4.0, but this is the first extensive article we've published about time in KML. It includes information on using <code><a href="http://code.google.com/apis/kml/documentation/kml_tags_beta1.html#timestamp">TimeStamp</a></code>, <code><a href="http://code.google.com/apis/kml/documentation/kml_tags_beta1.html#timespan">TimeSpan</a></code>, and animation of 3D models in Google Earth.</p>

<a href="http://code.google.com/apis/kml/documentation/time.html">Click here to read!</a>
<br clear="all"/>
<img style="margin: 0pt 10px 10px 0pt; float: right; cursor: pointer; width: 170px; height: 122px;" src="http://bp2.blogger.com/_Xr9hdoIAWw4/RyZ08ZQZ49I/AAAAAAAAADQ/ZbuqvIoxwn0/s320/kmlgme2_thumb.jpg" alt="" id="BLOGGER_PHOTO_ID_5126913806728553426" align="right" border="0" />
<p>Second, we've published a guest article by Valery Hronusov, from Perm State University in Russia, "Using KML in Google Mashup Editor." He shows how you can easily include a KML file in a Google Mashup Editor project to create a Google Maps mashup. Valery is a long-time KML developer who has produced a lot of innovative work. Most recently, he helped found <a href="http://pictearth.com/">Pict'Earth</a>, which combines advanced image acquisition products and services. Check out some of their <a href="http://pictearth.com/missions.html">amazing imagery</a>.</p>
<a href="http://code.google.com/support/bin/answer.py?answer=78649&amp;topic=11367">Click here to read!</a><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/176905472" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/175098498/clickable-polys-old-school-image-maps.html">Clickable Polys = Old School Image Maps + Educational Games?</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-25 16:41:14 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
Remember way back in the 90s when every website's front page included a clickable image map? Those were good times, and I'm always a fan of bringing back good times. When a <a href="http://groups.google.com.bz/group/Google-Maps-API/msg/76a48181f502ea82">developer suggested</a> in the forum that invisible clickable <code>GPolygon</code>s could be used to create a pseudo image map, I jumped at the opportunity to try it out.
</p>
<p>
To start, I drew simple borders on U.S. states using the fabulous polygon creation tools in Google <a href="http://maps.google.com/support/bin/answer.py?answer=68480">My Maps</a>. When I was finished, I had a <a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;msa=0&amp;msid=109250181535574469723.00043cb961e5234cea628&amp;ll=40.380028,-87.758789&amp;spn=26.336998,41.923828&amp;z=5&amp;om=1">
MyMap of the 48 continental U.S. states in outline</a>.
</p>
<p>
Next, I created <a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;msa=0&amp;output=nl&amp;msid=109250181535574469723.00043cb961e5234cea628">KML output</a> by clicking on the KML link within MyMaps, and converted the output into an array of <code>GLatLng</code>s using a <a href="http://google-maps-api.googlegroups.com/web/convertpoly.php?gda=UPtiKUAAAAD466_wf-FbEdBAhButDuF7qhSu26zCtUz_MMVS3TSzLmG1qiJ7UbTIup-M2XPURDQKsNz5zidxvdCW-v-QnBDj">
PHP script</a>. I saved this array into its own <a href="http://gmaps-samples.googlecode.com/svn/trunk/poly/states.js">JavaScript file</a>.
</p>
<p>
Finally, I created my first <a href="http://gmaps-samples.googlecode.com/svn/trunk/poly/statemap.html">image map map</a> (image map²?). I chose to pop up info windows when the user clicks a state, but you could also use <code>window.location.href</code> to bring the user to a new page, old school style.
</p>

<p>
After proving that this technique worked, I decided to take it a step further. I'm a bi-coastal girl (CA/NY) and I tend to have a very hazy knowledge of all the states in-between. I used the now-clickable states to create a multi-level educational game which prompts you with a state, and rewards you when you correctly click on that state. The easy level uses <code>G_NORMAL_MAP</code> with invisible polys, the medium level uses <code>G_SATELLITE_MAP</code> with outlined polys, and the hard (extreme!) level uses <code>G_SATELLITE_MAP</code> with invisible polys. Try it out below!
</p>
<p>
<span style="color: rgb(255, 0, 0);">
Warning: this game may make you hate the existence of such tiny states as Rhode Island, Delaware, etc.
</span>
</p>

<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/poly/stategame.html" frameborder="0" height="400" width="570">&amp;amp;amp;lt;br&amp;amp;amp;gt;&amp;amp;amp;lt;a&amp;amp;amp;gt;Link to State Game&amp;amp;amp;lt;/a&amp;amp;amp;gt;&amp;amp;amp;lt;br&amp;amp;amp;gt;&amp;amp;amp;lt;/a&amp;amp;amp;gt;&amp;amp;amp;lt;br&amp;amp;amp;gt;</iframe>

<p>
P.S. My high scores are 20, 12, and 10, for easy, medium, and hard. Can you beat that? ;)
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/175098498" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/174019883/make-your-kml-flash-y.html">Make your KML Flash-y!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-11-02 14:23:08 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Mano Marks, Geo API Team</span>
<p>
The recent Google Earth 4.2 release added the ability to view Flash content, in Windows versions of Earth. This is great news for KML authors, especially given how easy it is to include Flash in your info bubbles. All you have to do is use the param and embed tags, just as if you were embedding it in a normal webpage. I was looking at one of the <a href="http://www.youtube.com/earthoutreach">youtube videos</a> from the <a href="http://earth.google.com/outreach/index.html">Google Earth Outreach team</a>, and noticed the "Embed" text box. I selected, copied and pasted, and got this:
</p>
<pre class = "code">
&lt;object width="425" height="350"&gt;
&lt;param name="movie" value="http://www.youtube.com/v/5LzPw8-CGdA"&gt;&lt;/param&gt;
&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;
&lt;embed src="http://www.youtube.com/v/5LzPw8-CGdA"
type="application/x-shockwave-flash" wmode="transparent" 
width="425" height="350"&gt;&lt;/embed&gt;&lt;/object&gt;
</pre>
<p>
After putting that code directly in the description element of a KML Placemark and decreasing the width and height a bit, I got this:
</p>
<pre class = "code">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;kml xmlns="http://earth.google.com/kml/2.2"&gt;
 &lt;Placemark&gt;
  &lt;name&gt;Declan Butler's Avian Flu Outbreaks in Google Earth&lt;/name&gt;
  &lt;description&gt;&lt;![CDATA[
&lt;object width="240" height="200"&gt;
&lt;param name="movie" value="http://www.youtube.com/v/_N805-TyUiY"&gt;&lt;/param&gt;
&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;
&lt;embed src="http://www.youtube.com/v/_N805-TyUiY"
type="application/x-shockwave-flash" wmode="transparent" width="240"
height="200"&gt;&lt;/embed&gt;&lt;/object&gt;]]&gt;
&lt;/description&gt;
  &lt;LookAt&gt;
   &lt;longitude&gt;101.5513816532019&lt;/longitude&gt;
   &lt;latitude&gt;13.65113039555518&lt;/latitude&gt;
   &lt;altitude&gt;0&lt;/altitude&gt;
   &lt;range&gt;3571781.303404128&lt;/range&gt;
   &lt;tilt&gt;0&lt;/tilt&gt;
   &lt;heading&gt;10.18456659033348&lt;/heading&gt;
   &lt;altitudeMode&gt;relativeToGround&lt;/altitudeMode&gt;
  &lt;/LookAt&gt;
    &lt;Point&gt;
   &lt;coordinates&gt;100.3689268271656,15.74695793086107,0&lt;/coordinates&gt;
  &lt;/Point&gt;
  &lt;/Placemark&gt;
&lt;/kml&gt;
</pre>
<p>
Here's what this looks like in Earth - a nice description balloon with an embedded YouTube video:
<img src="http://gmaps-samples.googlecode.com/svn/trunk/flashinkml/youtube-kml.png"/>
<p>
And this works just the same on Maps too. Here's what it looks like in a Maps API map:
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/flashinkml/youtube-kml.html" height="350" width="550" frameborder="0">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/flashinkml/youtube-kml.html">Youtube in KML Example</a>
</iframe>
<p>
But video isn't all you can do - any Flash application can be embedded. <a href="http://www.gearthhacks.com/">Google Earth Hacks</a> allows you to <a href="http://www.gearthhacks.com/geboards/">view and post to their forums</a> from within their info bubbles, and <a href="http://gisplanet.blogspot.com/2007/10/geochat-room.html">Valery Hronusov</a> puts a <a href="http://wwwl.meebo.com/">Meebo</a> chat room in his.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/174019883" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/172322446/updated-documentation-examples-for.html">Updated Documentation &amp; Examples for Mapplets</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-19 17:57:59 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Tom Manshreck, Maps API Team</span>

<p>
We're happy to announce that the <a href="http://www.google.com/apis/maps/documentation/mapplets/guide.html">Google Mapplets documentation</a> has been given a makeover similar to that which the main Google Maps API documentation <a href="http://googlemapsapi.blogspot.com/2007/09/documentation-updates-to-maps-api.html">underwent in September</a>. We took this opportunity to greatly expand documentation for Mapplets and add many more relevant examples. In specific, we tried to convert all existing Maps API examples (where applicable) to their Mapplet equivalents. 
</p>
<p>
As with the main Maps API, we hope the documentation makes it easier to read, understand, and find information. The original "Concepts and Examples" file has been split up into 5 sections:
</p>

<ul>
    <li><a href="http://www.google.com/apis/maps/documentation/mapplets/guide.html" target="_blank">guide.html</a> (how to create and publish Mapplets)</li>
    <li><a href="http://www.google.com/apis/maps/documentation/mapplets/basics.html" target="_blank">basics.html</a> (a Mapplets "Hello World" tutorial)</li>
    <li><a href="http://www.google.com/apis/maps/documentation/mapplets/events.html" target="_blank">events.html</a> (the Mapplets event model)</li>
    <li><a href="http://www.google.com/apis/maps/documentation/mapplets/overlays.html" target="_blank">overlays.html</a> (markers, polylines, tiles, etc.)</li>
    <li><a href="http://www.google.com/apis/maps/documentation/mapplets/services.html" target="_blank">services.html</a> (web communication services)</li>
</ul>
<p>
So, if you haven't tried out Mapplets before, give them a shot. The ability to share your application via the main <a href="maps.google.com">maps.google.com</a> website is a terrific draw.
</p>
<p>
If you have any feedback or questions on the new documentation, please post in the<a href="http://groups.google.com/group/Google-Maps-API/">Maps API forum</a>.
Happy Mappleteering!
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/172322446" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/171232445/better-kml-support-in-maps-api-dynamic.html">Better KML Support in Maps API (Dynamic Streaming Markers, Oh my!)</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-24 10:35:38 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Mano Marks, Geo APIs Team</span>

<p>
Maps has just added support for view and interval based refresh in KML Network Links. This means that NetworkLinks can now provide you with dynamic, living content. You can, for instance, refresh marker locations every few seconds, or load only the geometry contained within the current viewport. This reduces load on your server and the browser, and provides for a richer experience for the user. These types of network links have worked in Google Earth for quite a while now, but this is the first time that they're working in Maps, and in the Maps API using GGeoXml.
</p>
<p>
OK, enough said, let's see some code. The following is an example of a <code>NetworkLink</code> that uses view based refresh:
</p>
<pre class="code">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;kml xmlns="http://earth.google.com/kml/2.0"&gt;
    &lt;NetworkLink&gt;
        &lt;description&gt;photos, updates once you stop moving the map.&lt;/description&gt;
        &lt;name&gt;Panoramio&lt;/name&gt;
        &lt;Link&gt;
            &lt;href&gt;http://www.panoramio.com/kml.php&lt;/href&gt;
            &lt;viewRefreshMode&gt;onStop&lt;/viewRefreshMode&gt;
            &lt;viewRefreshTime&gt;1&lt;/viewRefreshTime&gt;
        &lt;/Link&gt;
    &lt;/NetworkLink&gt;
&lt;/kml&gt;
</pre>
<p>
This network link retrieves KML through a PHP script hosted at <a href="http://panoramio.com" target="_blank">panoramio.com</a>. Since this network link has a <code>viewRefreshMode</code> of <code>onStop</code>, it will automatically append a bounding box parameter to the end of the URL - <code>BBOX=[bboxWest],[bboxSouth],[bboxEast],[bboxNorth]</code> - with the bracketed parameters replaced by values that describes the current map viewport. So, one second after the user stops panning or zooming the map, the NetworkLink might call a URL like this:
<pre class = code>
http://www.panoramio.com/kml.php?BBOX=-10,-10,10,10
</pre>
Then the <code>kml.php</code> file looks at the BBOX parameter value sent in and sends back a KML document that only contains the placemarks visible inside that bounding box. The end result, when embedded on a Maps API map, looks something like this: 
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/vbr/vbr.html" frameborder="0" width="550" height="700">
</iframe>
<p>If you want more information on view based refresh, check out the <a href="http://code.google.com/apis/kml/documentation/kml_tags_beta1.html#viewformat">KML Reference</a>. If you want more information on using KML in the Google Maps API, check out the <a href="http://www.google.com/apis/maps/documentation/reference.html#GGeoXml">Maps API documentation</a>.</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/171232445" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/167574263/labeledmarker-v11-now-supporting-marker.html">LabeledMarker v1.1: Now supporting marker and label toggling!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-09 12:28:53 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p class="para">
Google Project Hosting is a nifty place to store an open source project - besides offering an SVN (Subversion) repository, it also includes a wiki and an easy-to-use bug reporting system. A developer took advantage of that system to <a href="http://code.google.com/p/gmaps-utility-library-dev/issues/detail?id=9" target="_blank">report</a> that LabeledMarker v1.0 needed its own <code>show</code> and <code>hide</code> methods. While putting those methods in, I realized it'd be useful to have functions to toggle label visibility as well, so that a developer could add behavior to show or hide labels on marker <code>mouseover</code> or other events. Thus, LabeledMarker v1.1 now has: <code>showLabel</code>, <code>hideLabel</code>, <code>setLabelVisibility</code>, and <code>getLabelVisibility</code>.
</p>
<p>Check out the example map below which uses <code>setLabelVisibility</code>, <code>show</code>, and <code>hide</code> to let the user toggle marker groups and labels. A full explanation of this example is located within the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/labeledmarker/1.1/docs/examples.html" target="_blank">documentation</a>, and a more thorough explanation of the new functions is located within the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/labeledmarker/1.1/docs/reference.html" target="_blank">reference</a>. If you want to use the new functions, you can grab the new javascript from the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/labeledmarker/1.1/src/" target="_blank">1.1/src</a> folder, or wait two weeks for it to be pushed into the release directory.
</p>
<iframe src="http://gmaps-utility-library.googlecode.com/svn/trunk/labeledmarker/1.1/examples/markerhider.html" frameborder="0" width="550" height="400">
<a href="http://gmaps-utility-library.googlecode.com/svn/trunk/labeledmarker/1.1/examples/markerhider.html">Link to LabeledMarker Marker/Label Toggling Example</a>
</iframe><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/167574263" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/164540226/mashing-maps-with-oracle-xml-db-and.html">Mashing Maps with Oracle XML DB and Java</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-10-02 22:02:55 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Chris Schalk, Google Developer Advocate</span>

<p>
For all you Oracle database and Java developers out there, here's a fun mashup that combines an Oracle database (with its XML DB feature that can generate XML dynamically), a Java Servlet to extract the XML data, and the Google Maps API to provide a compelling, Map based user interface to the data.
</p>

<p>
This example allows users to query a database of fictitious worldwide hotels from a Google Maps application. A simple form passes query parameters with hotel attributes  to a Java Servlet which in turns executes the database query and generates geocoded hotel data in XML using Oracle's XML DB feature.</p>

<p>The Web client uses <a href="http://www.google.com/apis/maps/documentation/reference.html#GDownloadUrl" target="new">GDownloadUrl</a> to retrieve the XML data. An associated callback function then displays it on the map using markers and infoWindows.</p>

<p>A <a href="http://www.oracle.com/technology/pub/articles/schalk-googlemaps.html" target="new">full writeup</a> of this fun Mashup, including downloadable source code, is available at <a href="http://www.oracle.com/technology/pub/articles/schalk-googlemaps.html" target="new">Oracle's Technology Network website</a>.
</p>

<a href="http://www.oracle.com/technology/pub/articles/schalk-googlemaps.html" target="new"><img src="http://www.oracle.com/technology/pub/images/schalk-googlemaps-f1.jpg" /></a><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/164540226" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/160832704/mashing-around-australia-add-local.html">Mashing around Australia? Add a Local Search Control!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-24 17:04:27 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
I just came back from a two-week trip to Australia, where I spent my daytime hanging out with all the awesome Maps API Engineers at the Google Sydney office and my nighttime sampling the local restaurants and stores. Now, since I think about the Maps API 24/7, I found myself wondering "Can I use the <a href="http://www.google.com/uds/solutions/localsearch/reference.html" target="_blank">Local Search Control</a> to find even more places around Australia?" The answer, thanks to our friends at <a href="http://www.truelocal.com.au/" target="_blank">TrueLocal</a>, is yes. 
</p>
<p>
Want proof? Check out the map below, which is centered on Port Douglas, a town in Northeastern Australia where I spent a weekend eating and snorkeling.
</p>
<p>This map also shows off a cool way that Maps API Developer <a href="http://www.usnaviguide.com/zip.htm">John Coryat</a> came up with to alert the user to the presence and purpose of the control: an info window above the control with suggested queries that trigger a local search when clicked. The other features that the control in this map uses are:
<ul>
<li>Initial info-window suppression </li>
<li>Using an external div for the results </li>
<li>Setting the target of info window links to a new window </li>
<li>Setting initial focus to the search control</li> 
</ul>
You can play with all of the options in the <a href="http://gmaps-samples.googlecode.com/svn/trunk/localsearchcontrol/localsearchoptions.htm" target="_blank">Local Search Control options playground</a> or read more in the <a href="http://www.google.com/uds/solutions/localsearch/reference.html">class reference</a>.
</p>
<p>

<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/localsearchcontrol/localsearch_au.htm" width="550" height="700" frameborder="0">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/localsearchcontrol/localsearch_au.htm" target="_blank">Link to Australia example with Local Search</a>
</iframe><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/160832704" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/158690183/coming-soon-ip-based-geocode-limiting.html">Coming Soon:  IP-Based Geocode Limiting System</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-25 13:40:34 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
In the coming week, the Maps API geocode limit will change from a key-based system to an IP-based system, with a new limit of 15,000 queries per day. If you're a developer with a website that's using client-side geocoding via the <a href="http://www.google.com/apis/maps/documentation/reference.html#GClientGeocoder" target="_blank"><code>GClientGeocoder</code></a> object, this change means that each of your website visitors will now be subject to <strong>their own</strong> 15K quota. However, if you're a developer using the HTTP geocoder, this change means that all the geocodes from your script will be subject to <strong>the same 15K</strong> quota (your web server will send the same IP to us with each geocode). We've made this change in our geocoder due to the number of developers who've had issues with the GClientGeocoder and going over quota in times of high mashup user volume.
</p>
<p>
If you are using HTTP geocoding and suspect that you may be currently issuing more than 15K queries per day, you will need to take action to make sure that you don't go over the new limit (which would result in queries returning a 620 status code instead of a successful geocode).  Here are some proposed workarounds:
<ul>
<li>Switch over to using the GClientGeocoder. Check out an <a href="http://www.google.com/apis/maps/documentation/services.html#Geocoding_Object" target="_blank">example</a> from our documentation.</li>
<li>Supplement your geocoding with another geocoder service. Check out a <a href="http://groups.google.com/group/Google-Maps-API/web/resources-non-google-geocoders" target="_blank">list of geocoding resources</a> from our forum.</li>
</ul>

<p>
If you determine that you need to issue more than 15K daily queries for a single IP, we are open to the possibility of raising your IP's quota. Please <a href="mailto:api.pamelafox@google.com">send us</a> an email with a description of your use of the geocoder and links to the website implementing it. We will review your request and let you know if we'll be able to fulfill it.
</p>
<p>
We apologize for any inconvenience you may experience while transitioning to the new IP-based system. Please post any questions you have about the new system in the <a href="http://groups.google.com/group/Google-Maps-API" target="_blank">Maps API forum</a>.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/158690183" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/157809048/enhanced-map-tiles-for-50-countries.html">Enhanced Map Tiles for 50+ Countries (Plus Google Spreadsheets Geocoding!)</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-17 16:05:27 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
As <a href="http://google-latlong.blogspot.com/2007/09/more-of-world-for-you-to-explore.html" target="_blank">announced</a> on the Google LatLong Blog, Google Maps has added map tile coverage for 54 more countries in South America, Asia, and the Middle East. Those tile updates were also rolled out to the API at the same time, so you can begin your international mashing right away.
</p>

<p>In the tradition of the Maps API blog, we're taking advantage of Google Spreadsheets to show off the tile updates. For reading the data from our spreadsheet, we not only use the usual <a href="http://docs.google.com/support/spreadsheets/bin/answer.py?answer=54199&topic=11318" target="_blank">GoogleLookup formula</a>, but also the recently announced <a href="http://docs.google.com/support/spreadsheets/bin/answer.py?answer=75507&topic=11318" target="_blank">importXml formula</a>. This formula specifies a URL and an XPath expression to evaluate on the output of the URL, so we can use it with our <a href="http://www.google.com/apis/maps/documentation/services.html#Geocoding_Direct" target="_blank">HTTP Geocoder</a> output to do all of our geocoding queries within the spreadsheet. First, I specified the constants in cells at the bottom of the sheet:
<pre>  
B58: ABQIAAAA-O3c-Om9OcvXMOJXreXHAxSsTL4WIgxhMZ0ZK_kHjwHeQuOD4xSbZqVZW2U_OWOxMp3YPfzZl2GavQ
B59: http://maps.google.com/maps/geo?output=xml
B60: /kml/Response/Placemark[1]/Point/coordinates
B61: /kml/Response/Status/code
</pre>
<p>
Then I created the formulas for extracting the status code and coordinates of the geocode, where A2 is the cell containing the country name:
</p>
<pre>
=importXML(B$59 & "&q=" & A2 & "&key=" & B$58, B$61)
=importXML(B$59 & "&q=" & A2 & "&key=" & B$58, B$60)
</pre>

<p>After pasting those formulas in each row and waiting a few seconds for the spreadsheet to perform the XML extraction, I had a column of coordinates for all of the countries. The end result is <a href="http://spreadsheets.google.com/pub?key=p9pdwsai2hDNTxrx1HyYZOg" target="_blank">this spreadsheet</a>, and the map shown below (based off the <a href="http://gmaps-samples.googlecode.com/svn/trunk/spreadsheetsmapwizard/makecustommap.htm" target="_blank">Spreadsheets->Map wizard</a> output). Click on links in the sidebar to zoom in to a country, or just click a marker to see more information.
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/maptiles/update_sept2007.html" frameborder="0" width="550" height="425">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/maptiles/update_sept2007.html">Link to Tile Updates Map</a>
</iframe><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/157809048" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/155270325/extmaptypecontrol-12-now-supporting.html">ExtMapTypeControl 1.2: Now Supporting Custom Map Types</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-12 14:25:43 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Randy Becker, Community Maps API Developer</span>
<p>
First off, I'd like to thank Pamela Fox and the whole Google Maps team for creating such an awesome API, and especially for getting the Open Source Utility Library going.</p><p> Next, a little background. In my quest to implement custom controls, I discovered the <a href="http://googlemapsapi.blogspot.com/2007/06/add-traffic-to-your-mashup-button.html" id="ufvh" title="ExtMapTypeControl"><code>ExtMapTypeControl</code></a> code in the <a href="http://code.google.com/p/gmaps-utility-library/">Google Maps API Open Source Utility Library</a>. Much to my delight, the code was dazzlingly obvious and the control which I created fit perfectly within the GMaps UI. It was super-easy to extend the control with my own custom button(s) in lieu of the Traffic view, and I had hacked the original source to bits in no time. However, there was one part of the code that struck me as a bit inelegant: the assumption that map type controls always displayed the default map-types: <code>G_NORMAL_MAP</code>, <code>G_SATELLITE_MAP</code> and <code>G_HYBRID_MAP</code>. I wanted a control that could display custom map types as well.</p><p>For those of you who don't know, you can create your own <a href="http://mapki.com/index.php?title=Add_Your_Own_Custom_Map">custom map types</a>, <a href="http://crazedmonkey.com/blog/googletilecutter/google-tile-cutter.html" id="ur_d" title="cutting your own tiles">cut your own tiles</a>, or even remove default map types. The <code>GMapTypeControl</code> respects whatever map types are defined, and behaves as expected. I fixed up a version of the <code>ExtMapTypeControl</code> class to work the same way, <a href="http://code.google.com/p/gmaps-utility-library-dev/wiki/FrequentlyAskedQuestions">signed up</a> with the GMaps API Utility Library, and ported those changes into the existing library.
</p>
<p>
Check out the sample code and example below. You can grab the new javascript from the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.2/src/" target="_blank">1.2/src</a> folder, or wait two weeks for it to be pushed into the release directory.
</p>

<pre> 
var map = new GMap2(document.getElementById("map"));
map.setCenter(new GLatLng(37.441944, -122.141944), 13);
map.addControl(new ExtMapTypeControl());

map.removeMapType(G_NORMAL_MAP);
var copyright = new GCopyright(1, new GLatLngBounds(new GLatLng(-90, -180), new GLatLng(90, 180)), 0, 'owned by NASA');
var copyrights = new GCopyrightCollection('The Blue Marble Imagery');
copyrights.addCopyright(copyright);
var tilelayer = new GTileLayer(copyrights, 0, 17);
tilelayer.getTileUrl = function(tile, zoom) { 
  return "http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.2/examples/blue_marble.jpg"; 
};
var CUSTOM_MAP = new GMapType( [tilelayer], new GMercatorProjection(20), "NASA" );
map.addMapType(CUSTOM_MAP);
</pre>

<iframe src="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.2/examples/custommaptypes.html" frameborder="0" height="350" width="550">&amp;amp;amp;lt;br&amp;amp;amp;gt;&amp;amp;amp;lt;a href="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.2/examples/custommaptypes.html"&amp;amp;amp;gt;Link to ExtMapTypeControl with Custom Map Types example&amp;amp;amp;lt;/a&amp;amp;amp;gt;&amp;amp;amp;lt;br&amp;amp;amp;gt;</iframe><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/155270325" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/154718935/documentation-updates-to-maps-api.html">Documentation Updates to the Maps API!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-10 12:48:51 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Tom Manshreck, Technical Writer, Maps API</span>

<p>Some of you may have noticed that we've given the Maps API  <a href="http://www.google.com/apis/maps/documentation/index.html">documentation</a> a makeover. If you haven't looked at the documentation in a while, check it out now; you might learn something new! (I did.)</p><p>In addition to rewriting several sections and adding new content, we've also tried to make it easier to read, navigate, and find the information you're looking for. Some of this reorganization has come at a price. Originally, when the Maps API was small, we tried our best to give you all the information in one page. However, as the Google Maps API has grown, we've been forced to admit that structure helps.</p><p>The original "Concepts and Examples" file has been split up into 6 sections:
</p><ul><li><a href="http://www.google.com/apis/maps/documentation/index.html">index.html</a> (overview)</li><li><a href="http://www.google.com/apis/maps/documentation/introduction.html">introduction.html</a> (maps basics)</li><li><a href="http://www.google.com/apis/maps/documentation/events.html">events.html</a> (event model)</li><li><a href="http://www.google.com/apis/maps/documentation/controls.html">controls.html</a> (controls)</li><li><a href="http://www.google.com/apis/maps/documentation/overlays.html">overlays.html</a> (markers, polylines, tiles, etc.)</li><li><a href="http://www.google.com/apis/maps/documentation/services.html">services.html</a> (everything else)
</li></ul><p>Examples are also now listed in <a href="http://www.google.com/apis/maps/documentation/examples/index.html">one file for easy reference.</a></p><p>Some of the new information discusses a common question: <a href="http://www.google.com/apis/maps/documentation/overlays.html#Custom_Map_Types">how we organize and serve map tiles for the API</a>. We hope this encourages more development of your own custom map types.</p>We've also added tab navigation to the top of each page to ease navigation between different concepts. We hope you find the redesign easier to follow. In the coming months, I'll be working with Pamela Fox to add more in-depth tutorials, tips and tricks, and conceptual information. If you have requests for specific documentation, let us know on the <a href="http://groups.google.com/group/Google-Maps-API">Google Maps API Developer Forum</a>. (Use a subject line of Documentation Request: so we don't miss it ... :)<img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/154718935" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/153718636/v288-clickable-polylines-polygons.html">v2.88: Clickable Polylines &amp; Polygons</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-09-07 21:14:39 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Ben Appleton, Mapplets Team</span>
<p>
In our latest release (2.88) of the API, we've added "click" events to <code>GPolyline</code> and <code>GPolygon</code>, much to the enthusiasm of developers in the <a href="http://groups.google.com/group/Google-Maps-API" target="_blank">forum</a>. Since a few developers started speculating on how we implemented click detection in the API, we're giving you all the juicy details right here. (Warning: Algorithms ahead!)
</p>

<h3>Polyline Hit Detection</h3>

<p>As polylines have no intrinsic width, detecting clicks on polylines is something of a judgment call. To detect polyline clicks, we need to determine two things: whether clicks are close enough to a polyline to count as a click, and which segment of the polyline is the closest to the click.</p>

<h4>Overview of the Algorithm</h4>

<p>
Click detection begins by measuring the distance (in pixels) between the clicked point and the polyline. For each segment of the polyline, we compute the distance between the clicked point and the nearest point along that segment. We then take the minimum of these distances as the closest segment; if the distance is then small enough, we declare it a click on the polyline.
</p>

<center>
<img src="http://bp3.blogger.com/_T1lquhCmKo8/RuIfmIuXWOI/AAAAAAAAAAM/4JCYu1_1240/s400/clickable_1.gif">
</center>
<br clear="all"/>

<h4>Reducing the Sample Set</h4>

<p>
Note that the simple algorithm has to look at every segment of the polyline. It can be quite slow for big polylines (such as driving directions). There are a few heuristics which drastically improve the simple algorithm:
</p>

<ul>
<li>Given the bounds of the currently visible map viewport, we discard points which are off screen. This can drastically reduce the number of points to consider.</li>
<li>As we zoom out from a detailed polyline, we also condense and "smooth" segments of the polyline into a simpler group of segments without noticeably changing its shape. In the example below, we simplify a polyline from 9 points at the highest zoom level to 4 points at a more zoomed-out level.
</li>
</ul>

<center>
<img src="http://bp3.blogger.com/_T1lquhCmKo8/RuIf7IuXWPI/AAAAAAAAAAU/PnZFLayLzNQ/s400/clickable_2.gif">
</center>

<br clear="all"/>


<h4>Using Bounds Trees</h4>

<p>
If we discern that a clicked point is far away from a segment, we discard it from consideration. We take advantage of this fact by precomputing the bounds of groups of segments; if a clicked point is far from these bounds, we skip computing distances for all of the enclosed polylines. By recursively combining these bounds for larger and larger groups of segments, we build a "bounds tree" that allows us to skip most of the segments when performing hit detection.
</p>

<center>
<img src="http://bp1.blogger.com/_T1lquhCmKo8/RuIgOouXWQI/AAAAAAAAAAc/Wkb53pmv8P8/s400/clickable_3.gif">
</center>

<p>
This dramatically speeds up polyline hit detection. For example, we can detect clicks for complicated polylines like the query
<a href="http://maps.google.com/?q=washington+to+san+francisco">Washington to San Francisco</a>.
This polyline has around 2000 points.
</p>

<br clear="all"/>

<h3>Polygon Hit Detection</h3>


<p>
Detecting whether a clicked point is within a polygon is more straightforward, and less open to interpretation. We first draw a straight line from the clicked point to the right of the screen. Each time this test line crosses a segment of the polygon, it changes state from being inside to outside or vice-versa. If the test line crosses an odd number of segments then the point is determined to be inside the polygon, whereas if the test line crosses an even number of segments then the point must be outside.
</p>

<center>
<img src="http://bp2.blogger.com/_AOC5G_oU90c/Rt-nj0u6I1I/AAAAAAAAACU/AFG81vbvFXE/s320/polygon_ray_test_small.png">
</center>

<p>
We can apply many of the same improvements for polylines in polygon detection, using the map viewport and zoom level to drastically reduce the number of segments to consider, and using a bounds tree to avoid performing unnecessary intersection tests.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/153718636" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/150679152/got-hour-free-create-your-first-map.html">Got an hour free? Create your first map!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-31 13:13:15 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
There may be some of you out there that have been reading this blog just for its literary merit, putting off creating your first Maps API mashup because you thought it was more difficult than it is. Well, procrastinate no further. I've put together <a href="http://code.google.com/support/bin/answer.py?answer=74725&topic=11364&fromblog" target="_blank">a tutorial</a> that guides you step-by-step through the process of creating a map, uploading it to <a>Google Pages</a>, and customizing it to show your location. (Instructions for printing out and sticking it on to your fridge not included.)
</p>

<p>An example map is shown below:</p>
<iframe src="http://maps.examples.googlepages.com/mymap_controls.html" frameborder="0" height="330" width="530">
<A href="http://maps.examples.googlepages.com/mymap_controls.html">Example Map</a>
</iframe>

<p>So, no more excuses. Shut yourself in a room for an hour (or less) until you've completed a map. Then bask in the warm glow of checking item #332 off of your life goals. Or, alternatively, just create an <a href="http://googlemapsapi.blogspot.com/2007/08/dont-feel-like-coding-embed-map.html" target="_blank">embeddable map</a>, and tell yourself it's close enough. :)
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/150679152" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/147084306/dont-feel-like-coding-embed-map.html">Don't feel like coding? Embed a map!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-22 15:15:51 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
In addition to working hard to add more and more powerful features to the Maps API for our developer community, we also strive to make it even easier for non-programmers to embed maps into their webpages.  To that end, the Google Maps team announced a new feature yesterday, called <a href="http://google-latlong.blogspot.com/2007/08/youtube-style-embeddable-maps_21.html" target="_blank">Embeddable Maps</a>, that allows anybody, regardless of programming experience, to include a Google Map in their webpage. Although I personally may want to claim that using the Maps API is simple, putting an embedded map in your page literally takes nothing more than a copy and paste. Check out the map I embedded below - it shows off a nerdy KML created by Bo Majewski, one of our very own Google Maps API engineers.
</p>
<p>
So, please, go ahead and use embeddable maps to display your favorite KMLs on your blog, or show a map of your business location on your website. The <a href="http://groups.google.com/group/Google-Maps-API/" target="_blank">Maps API community</a> will always welcome you back, if you start feeling adventurous or homesick for Javascript.
</p>

<iframe width="540" height="500" frameborder="no" scrolling="no" marginheight="0" marginwidth="0" src="http://maps.google.com/maps/ms?ie=UTF8&hl=en&msa=0&msid=103763259662194171141.000001119b4bc596127f8&om=1&ll=47.18952,-106.191339&spn=25.507165,-126.18471&output=embed&s=AARTsJp03xKU3yqkWkxMQLccTWMhTNkLRg"></iframe><br/><a href="http://maps.google.com/maps/ms?ie=UTF8&hl=en&msa=0&msid=103763259662194171141.000001119b4bc596127f8&om=1&ll=47.18952,-106.191339&spn=25.507165,-126.18471&source=embed" style="color:#0000FF;text-align:left;font-size:small">View Larger Map</a><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/147084306" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/144122168/dragzoom-marker-manager-cluster-zoom.html">DragZoom + Marker Manager = Cluster Zoom!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-15 13:27:02 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Richard Garland ("Papa Bear"), Maps API Developer</span>
<br/>
<p><em>Check out Richard's first guest blog post here: <a href="http://googlemapsapi.blogspot.com/2007/08/you-can-always-go-back-to-where-you.html" target="_blank">DragZoomControl 1.1</a>.</em>
<p>
Like many developers, my maps often have a great number of markers in a small geographic area, but these areas may be few and far between in the larger area of the full map.  Perhaps you are advertising Mercedes dealerships and there are 23 in greater New York,  19 in Chicago and 51 in Palo Alto.  If you put all these markers on a US map, you would end up with 3 indecipherable blobs at these locations.  One solution is called "clustering", and by using the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/markermanager/release/" target="_blank">Marker Manager</a>, you can just put a single marker at each of the three cities.  These "cluster markers" serve as proxies for the many underlying markers.  Typically an application would allow clicking on one of these cluster markers to zoom you in to that particular location, exposing the underlying markers. But wouldn't it be nice to be able to get back to the original map view in one click?
</p>
<p>
After working on the DragZoom back button, I thought I should do something similar for my cluster zooms.  Then I thought "Why have two special controls and potentially two back buttons on my map?"  The end result was by adding a method and one more callback to DragZoomControl, I could utilize the back button functionality for my own custom cluster zoom.
</p>
<p>
In the example below you will see a map of greater New York.  Start by doing a DragZoom encompassing Manhattan (about 1/4 of the map), and a single cluster marker will appear. Click on that marker, and you'll see a close-up of Central Park with several small markers. You can now click on the markers or use DragZoom to zoom in further. At any time, you can click the back button to reverse the zoom sequence. Notice that the back button text changes to indicate whether it's a standard DragZoom or a cluster zoom.
</p>

<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/dragzoom/dragzoom_backbutton2.html" frameborder="0" width="560" height="400">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/dragzoom/dragzoom_backbutton2.html" target="_blank">DragZoom + Cluster Zoom Example</a>
</iframe>

<p>Want to add a DragZoomControl to your map? You can grab the new code from the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/src/" target="_blank">1.1/src</a> folder, or wait two weeks for it to be pushed into the release directory. You can also read through <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/docs/examples.html" target="_blank">a full set of examples</a> or <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/docs/reference.html" target="_blank">the class reference</a>. As always, you can post in the <a href="http://groups.google.com/group/Google-Maps-API">developer forum</a> with questions or suggestions.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/144122168" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/143124456/you-can-always-go-back-to-where-you.html">You can always go back to where you came from with DragZoomControl v1.1</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-14 13:01:46 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Richard Garland ("Papa Bear"), Maps API Developer</span>
<br/>
<p>
I'd like to thank Pamela for inviting me to post on this blog, and especially for encouraging me to join the <a href="http://code.google.com/p/gmaps-utility-library-dev/" target="_blank">Open Source library</a>.  I would encourage anyone out there to talk to her if you've written code which may be useful to the Maps API development community.
<p>
<p>
When <a href="http://www.earthcode.com" target="_blank">Andre Lewis'</a> DragZoomControl was <a href="http://googlemapsapi.blogspot.com/2007/06/dragzoomcontrol-v10-easier-zooming_06.html" target="_blank">introduced on this blog</a> a few months ago, I was eager to use it in my own Google Maps API app.  But I soon thought to myself, "Hey, wouldn't it be nice to able to back out from where the zoom had centered the map?"  I looked into DragZoomControl's options and realized that I could implement a back button just by using the many callbacks available.  So I did.  Then Pamela saw my extension and asked me to put it in the OS library so it'd be available for all developers. So here we are today.
</p>


<p>
While coding the back button functionality, a few decisions needed to be made.  I decided that the function should restore the map context (including map type) to the state prior to the last DragZoom, and that if successive DragZooms are done, then the function should take you back one step at a time (undoing the DragZooms in reverse order).
</p>

<p>
The simple example below shows the basic function.  If you click the magnifying glass button on the map, you will initiate a DragZoom.  Click and drag your mouse to create a rectangle and then release the mouse button - the map will zoom in to your rectangle. This is the standard DragZoom functionality. But what you will see on the map now is a new button below the first.  This is the back button - click on it to restore the map to its prior state.
</p>

<p>
Now try several DragZooms in succession, drilling down to a particular area (maybe Central Park).  After any number of zoom-ins, you can start clicking the back button and the map will go back in reverse order through all the steps you took.
</p>

<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/dragzoom/dragzoom_backbutton1.html" frameborder="0" width="500" height="300">
<a href="http://gmaps-samples.googlecode.com/svn/trunk/dragzoom/dragzoom_backbutton1.html" target="_blank">Simple DragZoom with Back Button Example</a>
</iframe>

<p>
Want to add a back button to your drag zoom? You can grab the new code from the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/src/" target="_blank">1.1/src</a> folder, or wait two weeks for it to be pushed into the release directory. You can also read through <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/docs/examples.html" target="_blank">a full set of examples</a> or <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/dragzoom/1.1/docs/reference.html" target="_blank">the class reference</a>. As always, you can post in the <a href="http://groups.google.com/group/Google-Maps-API">developer forum</a> with questions or suggestions.
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/143124456" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/142142807/extmaptypecontrol-11-smarter-traffic.html">ExtMapTypeControl 1.1: A Smarter Traffic Button</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-08 14:37:39 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
In June, we released <a href="http://googlemapsapi.blogspot.com/2007/06/add-traffic-to-your-mashup-button.html" target="_blank">ExtMapTypeControl</a>, an open-source map type control that includes an optional "Traffic" button. Some developers  were disappointed that the traffic button did not hide and show depending on whether traffic was available in the current viewport, as the button in <A href="http://maps.google.com" target="_blank">maps.google.com</a> does. 
</p>

<p>
In this week's release of API v2.86, there is a "<code>changed</code>" event for <code><a href="http://www.google.com/apis/maps/documentation/reference.html#GTrafficOverlay" target="_blank">GTrafficOverlay</a></code> that sends a boolean indicating whether traffic data is available in the current viewport. Using this event, I've modified the traffic button in ExtMapTypeControl to behave exactly as the maps.google.com button does. The example below lets you test out the new behavior -  pan and zoom out to the other side of the world to see the button disappear.
</p>
<iframe src="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.1/examples/trafficexample.html" frameborder="0" height="350" width="550">
<a href="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.1/examples/trafficexample.html" target="_blank">Link to ExtMapTypeControl Example</a>
</iframe>

<p>
You can grab the new code from the <a href="http://gmaps-utility-library.googlecode.com/svn/trunk/extmaptypecontrol/1.1/src/" target="_blank">1.1/src</a> folder, or wait two weeks for the new code to be pushed into the release directory. This code is also a great starting ground for people looking to make a customized map type control for their sites - <a href="http://gmaps-samples.googlecode.com/svn/trunk/demo/demo.html" target="_blank">here's an example</a> of customizing it for a fake merchant called "The Blue Store". You could also customize it for green, red, or even purple stores. :)
</p><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/142142807" height="1" width="1"/></div>
</li>
</ul>
<ul>
<li class="regularitem">
<h4 class="itemtitle">
<a href="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~3/140037130/looking-for-somewhere-in-india-hong.html">Looking for somewhere in India, Hong Kong, Taiwan, Singapore, or Ireland? Just geocode it!</a>
</h4>
<h5 class="itemposttime">
<span>Posted: </span>2007-08-01 22:18:30 UTC-07:00</h5>
<div class="itemcontent" name="decodeable"><span class="byline-author">Posted by Pamela Fox, Maps API Team</span>

<p>
Over the past few weeks, we enabled geocoding in the API for India, Hong Kong, Taiwan, Singapore, and Ireland.  That means there are potentially 1.1 billion more users that might now be able to locate themselves on your map - that's about 1/5 of the world's population. (I utilized <a href="http://docs.google.com/support/spreadsheets/bin/answer.py?answer=54199" target="_blank">GoogleLookup</a> functions in <a href="http://gmaps-samples.googlecode.com/svn/trunk/geocoder/wcountrycode.html" target="_blank">a google spreadsheet</a> to do the calculations.)
</p>
<p>
As with the last update, I've set up an example below using the API geocoder to prove to you that geocoding works for these regions. You can enter in any address you'd like, or, if you're feeling un-creative, click on a flag to populate the address field with a sample address and see it geocoded. If you're on a computer with chinese input, you can geocode more exact addresses in Taiwan like "台北汐止龍安路36 台湾". Happy geocoding!
</p>
<iframe src="http://gmaps-samples.googlecode.com/svn/trunk/geocoder/update_aug2007.html" width="500" height="450" frameborder="0"> <a href="http://gmaps-samples.googlecode.com/svn/trunk/geocoder/update_aug2007.html" target="_blank">Link to Map Example</a>
</iframe><img src="http://feeds.feedburner.com/~r/OfficialGoogleMapsApiBlog/~4/140037130" height="1" width="1"/></div>
</li>
</ul>
</div>
<div id="footer">
<a href="http://www.feedburner.com"><img src="http://www.feedburner.com/fb/feed-styles/images/footer_logo.gif"></a>
<p>FeedBurner delivers the world's subscriptions wherever they need to go. Publish a feed for text or podcasting? <a href="http://www.feedburner.com" target="_blank">
<br>You should try FeedBurner today</a>.</p>
<img src="http://www.feedburner.com/fb/feed-styles/images/tk.gif?rdm=N65538" width="1" height="1" alt="" border="0"></div>
</div>
</body>
</html>
